<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>HiPS client for Python : A GSoC project</title><link>https://adl1995.github.io/</link><description></description><lastBuildDate>Sat, 09 Sep 2017 10:58:00 +0500</lastBuildDate><item><title>Parallel tile fetching and CPU-and-memory statistics</title><link>https://adl1995.github.io/parallel-tile-fetching-and-cpu-and-memory-statistics.html</link><description>&lt;p&gt;The &lt;a href="http://hips.readthedocs.io"&gt;hips&lt;/a&gt; package now supports parallel tile fetching. The user can achieve this either using &lt;a href="https://docs.python.org/3/library/urllib.html"&gt;urllib&lt;/a&gt; or &lt;a href="https://docs.python.org/3/library/urllib.html"&gt;aiohttp&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In case of &lt;a href="http://aiohttp.readthedocs.io/en/stable/"&gt;aiohttp&lt;/a&gt;, the fetched tile data is coupled with &lt;a href="http://hips.readthedocs.io/en/latest/api/hips.HipsTileMeta.html"&gt;&lt;code&gt;HipsTileMeta&lt;/code&gt;&lt;/a&gt; to create a &lt;a href="http://hips.readthedocs.io/en/latest/api/hips.HipsTile.html"&gt;&lt;code&gt;HipsTile&lt;/code&gt;&lt;/a&gt; object. This ensures there is no misalignment of tile data, otherwise, tiles could be swapped during …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Sat, 09 Sep 2017 10:58:00 +0500</pubDate><guid isPermaLink="false">tag:adl1995.github.io,2017-09-09:/parallel-tile-fetching-and-cpu-and-memory-statistics.html</guid></item><item><title>GSoC final evaluation report</title><link>https://adl1995.github.io/gsoc-final-evaluation-report.html</link><description>&lt;h4&gt;Link to GitHub repository: &lt;a href="http://github.com/hipspy/hips"&gt;&lt;code&gt;http://github.com/hipspy/hips&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;In addition to the main &lt;a href="http://github.com/hipspy/hips"&gt;hips&lt;/a&gt; repository, I also maintained my personal &lt;a href="https://github.com/adl1995/HIPS-to-Py"&gt;&lt;span class="caps"&gt;HIPS&lt;/span&gt;-to-Py  repository on GitHub&lt;/a&gt;. This contains Jupyter notebooks which showcase the functionality in &lt;a href="http://github.com/hipspy/hips"&gt;hips&lt;/a&gt; and numerous related Python scripts. The &lt;a href="https://github.com/adl1995/HIPS-to-Py/wiki/HiPS-to-Py"&gt;Wiki page&lt;/a&gt; contains a short description on hips …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Mon, 28 Aug 2017 22:35:00 +0500</pubDate><guid isPermaLink="false">tag:adl1995.github.io,2017-08-28:/gsoc-final-evaluation-report.html</guid></item><item><title>Fixing tile distortion issue in hips package</title><link>https://adl1995.github.io/fixing-tile-distortion-issue-in-hips-package.html</link><description>&lt;p&gt;As documented in the &lt;a href="http://hips.readthedocs.io/en/latest/drawing_algo.html#tile-distortion-issue"&gt;Tile distortion issue&lt;/a&gt; section, the previous technique for drawing HiPS tiles brings some astrometry offsets for distorted&amp;nbsp;tiles.&lt;/p&gt;
&lt;p&gt;An example of such distortions is shown in the example below (uncheck &amp;#8220;Activate deformations reduction algorithm&amp;#8221; to view the astrometry offsets): &lt;a href="http://cds.unistra.fr/~boch/AL/test-reduce-deformations2.html"&gt;http://cds.unistra.fr/~boch/&lt;span class="caps"&gt;AL&lt;/span&gt;/test-reduce-deformations2 …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Thu, 10 Aug 2017 11:28:00 +0500</pubDate><guid isPermaLink="false">tag:adl1995.github.io,2017-08-10:/fixing-tile-distortion-issue-in-hips-package.html</guid></item><item><title>RGB tile drawing in hips package</title><link>https://adl1995.github.io/rgb-tile-drawing-in-hips-package.html</link><description>&lt;p&gt;The &lt;code&gt;hips&lt;/code&gt; package now supports &lt;span class="caps"&gt;RGB&lt;/span&gt; tile drawing. To make this possible, the output image dimensions had to be altered according to the following&amp;nbsp;configuration:&lt;/p&gt;
&lt;p&gt;The output image shape is two dimensional for grayscale, and three dimensional for color&amp;nbsp;images:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;shape = (height, width)&lt;/code&gt; for &lt;span class="caps"&gt;FITS&lt;/span&gt; images with one grayscale&amp;nbsp;channel …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Sun, 23 Jul 2017 12:46:00 +0500</pubDate><guid isPermaLink="false">tag:adl1995.github.io,2017-07-23:/rgb-tile-drawing-in-hips-package.html</guid></item><item><title>Parameterized testing using Pytest</title><link>https://adl1995.github.io/parameterized-testing-using-pytest.html</link><description>&lt;p&gt;Pytest provides a feature for parameterized testing in Python. The built-in &lt;code&gt;pytest.mark.parametrize&lt;/code&gt; decorator enables parametrization of arguments for a test function. This allows the user to compare the values for input and&amp;nbsp;output.&lt;/p&gt;
&lt;p&gt;Here is a typical example which shows its&amp;nbsp;usage:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;get_hips_order_for_resolution_pars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="nb"&gt;dict&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tile_width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;512&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resolution&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mf"&gt;0 …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Thu, 13 Jul 2017 09:40:00 +0500</pubDate><guid isPermaLink="false">tag:adl1995.github.io,2017-07-13:/parameterized-testing-using-pytest.html</guid></item><item><title>Creating custom decorators in Python 3.6</title><link>https://adl1995.github.io/creating-custom-decorators-in-python-36.html</link><description>&lt;p&gt;In the &lt;a href="http://hips.readthedocs.io"&gt;hips&lt;/a&gt; package, often data has to be fetched from remote servers, especially HiPS tiles. One way to cut back on the queries was by introducing the &lt;a href="github.com/hipspy/hips-extra"&gt;hips-extra&lt;/a&gt; repository. This contains HiPS tiles from various HiPS surveys. This allows us to quickly fetch tiles from local storage, which makes …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Sun, 02 Jul 2017 12:41:00 +0500</pubDate><guid isPermaLink="false">tag:adl1995.github.io,2017-07-02:/creating-custom-decorators-in-python-36.html</guid></item><item><title>HiPS tile drawing</title><link>https://adl1995.github.io/hips-tile-drawing.html</link><description>&lt;p&gt;One of the major part of the &lt;a href="http://hips.readthedocs.io"&gt;hips&lt;/a&gt; project is being able to draw HiPS tiles onto a larger sky image. The most important part in this is using projective transformation for computing and drawing a HiPS tile at the correct location. The discussion below is for the tile containing …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Sat, 24 Jun 2017 11:50:00 +0500</pubDate><guid isPermaLink="false">tag:adl1995.github.io,2017-06-24:/hips-tile-drawing.html</guid></item><item><title>Type annotations in Python 3.6 and using Mypy as a static type checker</title><link>https://adl1995.github.io/type-annotations-in-python-36-and-using-mypy-as-a-static-type-checker.html</link><description>&lt;p&gt;The main goal of type annotations is to open up Python code to easier static analysis and refactoring, potential runtime type checking, and (perhaps, in some contexts) code generation utilizing type information. These were introduced in &lt;a href="https://www.python.org/dev/peps/pep-0484/"&gt;&lt;span class="caps"&gt;PEP&lt;/span&gt; 484&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this regards, static type checking is the most important. It allows …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Sun, 11 Jun 2017 12:58:00 +0500</pubDate><guid isPermaLink="false">tag:adl1995.github.io,2017-06-11:/type-annotations-in-python-36-and-using-mypy-as-a-static-type-checker.html</guid></item><item><title>An overview of Hierarchical Progressive Surveys (HiPS) and the HEALPix framework</title><link>https://adl1995.github.io/an-overview-of-hierarchical-progressive-surveys-hips-and-the-healpix-framework.html</link><description>&lt;p&gt;HiPS utilizes the HEALPix framework and uses it for mapping a sphere (in this case, part of a sky) and compiles / transforms it into &lt;a href="#hips-tiles"&gt;tiles&lt;/a&gt; and &lt;a href="#hips-pixels"&gt;pixels&lt;/a&gt;. Of course, this is in context of astronomical data. HiPS emphasizes on usability thus it tries abstract the scientific details while preserving them …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Wed, 31 May 2017 19:39:00 +0500</pubDate><guid isPermaLink="false">tag:adl1995.github.io,2017-05-31:/an-overview-of-hierarchical-progressive-surveys-hips-and-the-healpix-framework.html</guid></item><item><title>An introduction to coordinate systems used in Astronomy</title><link>https://adl1995.github.io/an-introduction-to-coordinate-systems-used-in-astronomy.html</link><description>&lt;p&gt;Before moving on to the coordinate systems, listed below are some common measures used in astronomical&amp;nbsp;studies.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;&lt;span class="caps"&gt;RA&lt;/span&gt; / &lt;span class="caps"&gt;DEC&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;span class="caps"&gt;RA&lt;/span&gt; (right ascension) and &lt;span class="caps"&gt;DEC&lt;/span&gt; (declination) are the longitudes and latitudes of the sky. &lt;span class="caps"&gt;RA&lt;/span&gt; corresponds to east/west direction (like longitude), while Dec measures north/south directions, like&amp;nbsp;latitude.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;&lt;span class="caps"&gt;WCS …&lt;/span&gt;&lt;/strong&gt;&lt;/h3&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Tue, 23 May 2017 12:37:00 +0500</pubDate><guid isPermaLink="false">tag:adl1995.github.io,2017-05-23:/an-introduction-to-coordinate-systems-used-in-astronomy.html</guid></item><item><title>A comparison of response times using URLLib, GRequests, and asyncio</title><link>https://adl1995.github.io/a-comparison-of-response-times-using-urllib-grequests-and-asyncio.html</link><description>&lt;p&gt;For the HiPS client as multiple tiles have to be fetched for time efficiency, concurrency has to be achieved. So, a comparison was done utilizing Python&amp;#8217;s &lt;code&gt;threading&lt;/code&gt; library. The elapsed time was calculated using &lt;code&gt;time&lt;/code&gt;. For fetching the tiles &lt;code&gt;urllib&lt;/code&gt;, &lt;code&gt;grequests&lt;/code&gt;, &lt;code&gt;aiohttp&lt;/code&gt;, &lt;code&gt;asyncio&lt;/code&gt; were used. The survey chosen was …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Tue, 09 May 2017 15:54:00 +0500</pubDate><guid isPermaLink="false">tag:adl1995.github.io,2017-05-09:/a-comparison-of-response-times-using-urllib-grequests-and-asyncio.html</guid></item><item><title>My First Article</title><link>https://adl1995.github.io/my-first-article.html</link><description>&lt;p&gt;Hello&amp;nbsp;World!&lt;/p&gt;
&lt;p&gt;This blog will be extensively used for posting GSoC updates, apart from other technical&amp;nbsp;ramblings.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Adeel Ahmad</dc:creator><pubDate>Sun, 19 Mar 2017 22:45:00 +0500</pubDate><guid isPermaLink="false">tag:adl1995.github.io,2017-03-19:/my-first-article.html</guid></item></channel></rss>